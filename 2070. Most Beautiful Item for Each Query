from bisect import bisect_right
from typing import List

class Solution:
    def maximumBeauty(self, items: List[List[int]], queries: List[int]) -> List[int]:
        # Step 1: Sort the items by price
        items.sort()  # Sort first by price, and if prices are equal, by beauty
        
        # Step 2: Prepare a list of max beauties for each price point
        max_beauties = []
        current_max = 0
        for price, beauty in items:
            current_max = max(current_max, beauty)
            max_beauties.append([price, current_max])
        
        # Step 3: For each query, use binary search to find the maximum beauty
        result = []
        for query in queries:
            idx = bisect_right(max_beauties, [query, float('inf')]) - 1
            if idx >= 0 and max_beauties[idx][0] <= query:
                result.append(max_beauties[idx][1])
            else:
                result.append(0)
        
        return result
