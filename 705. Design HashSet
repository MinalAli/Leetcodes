class MyHashSet:
    def __init__(self):
        self.size = 1000  # Number of buckets
        self.buckets = [[] for _ in range(self.size)]  # Initialize empty lists
    
    def _hash(self, key: int) -> int:
        """ Hash function to get index in the bucket list """
        return key % self.size
    
    def add(self, key: int) -> None:
        """ Inserts the key into the HashSet """
        index = self._hash(key)
        if key not in self.buckets[index]:  # Avoid duplicates
            self.buckets[index].append(key)
    
    def remove(self, key: int) -> None:
        """ Removes the key if it exists in the HashSet """
        index = self._hash(key)
        if key in self.buckets[index]:  # Check before removing
            self.buckets[index].remove(key)
    
    def contains(self, key: int) -> bool:
        """ Returns True if the key exists in the HashSet, otherwise False """
        index = self._hash(key)
        return key in self.buckets[index]
