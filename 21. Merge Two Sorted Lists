# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next

class Solution:
    def mergeTwoLists(self, list1: Optional[ListNode], list2: Optional[ListNode]) -> Optional[ListNode]:
        # Initialize a dummy node to serve as the starting point of the merged list
        dummy = ListNode()
        current = dummy  # This will be used to build the new list
        
        # Traverse both lists and merge them
        while list1 and list2:
            if list1.val <= list2.val:
                current.next = list1
                list1 = list1.next
            else:
                current.next = list2
                list2 = list2.next
            current = current.next  # Move the current pointer
        
        # At the end of the loop, one of the lists might still have remaining nodes
        if list1:
            current.next = list1
        elif list2:
            current.next = list2
        
        # Return the next of dummy because dummy is a placeholder
        return dummy.next
