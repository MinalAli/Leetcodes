import random
import string

class Codec:
    def __init__(self):
        self.url_map = {}  # Stores short URL -> long URL mapping
        self.base_url = "http://tinyurl.com/"
    
    def _generate_short_code(self):
        """Generate a random 6-character short code."""
        return ''.join(random.choices(string.ascii_letters + string.digits, k=6))
    
    def encode(self, longUrl: str) -> str:
        """Encodes a URL to a shortened URL."""
        short_code = self._generate_short_code()
        
        # Ensure short_code is unique
        while short_code in self.url_map:
            short_code = self._generate_short_code()
        
        shortUrl = self.base_url + short_code
        self.url_map[shortUrl] = longUrl  # Store mapping
        
        return shortUrl

    def decode(self, shortUrl: str) -> str:
        """Decodes a shortened URL to its original URL."""
        return self.url_map.get(shortUrl, "")  # Return the long URL or empty if not found


# Usage Example:
codec = Codec()
url = "https://leetcode.com/problems/design-tinyurl"
tiny = codec.encode(url)  # Encode the URL
print("Short URL:", tiny)

original = codec.decode(tiny)  # Decode back to original URL
print("Original URL:", original)
