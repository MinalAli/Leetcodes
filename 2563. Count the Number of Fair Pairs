from typing import List
from bisect import bisect_left, bisect_right

class Solution:
    def countFairPairs(self, nums: List[int], lower: int, upper: int) -> int:
        # Step 1: Sort the nums array
        nums.sort()
        n = len(nums)
        count = 0
        
        # Step 2: Iterate over each element nums[i] as the first element of the pair
        for i in range(n - 1):
            # Step 3: Calculate the target range for the second element
            target_min = lower - nums[i]
            target_max = upper - nums[i]
            
            # Step 4: Use binary search to find the range of indices for valid second elements
            left_index = bisect_left(nums, target_min, i + 1, n)   # Start from i + 1
            right_index = bisect_right(nums, target_max, i + 1, n) - 1
            
            # Step 5: Count the number of valid pairs with nums[i]
            if left_index <= right_index:
                count += (right_index - left_index + 1)
        
        return count
