# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def preorderTraversal(self, root: Optional[TreeNode]) -> List[int]:
        if not root:
            return []
        
        stack, result = [root], []
        
        while stack:
            node = stack.pop()  # Process the last inserted node (LIFO)
            result.append(node.val)
            
            if node.right:
                stack.append(node.right)  # Push right first (so left is processed first)
            if node.left:
                stack.append(node.left)  # Push left to process it next
        
        return result

        
